name: Deploys an ECS Docker Image
on:
  workflow_call:
    inputs:
      env:
        required: false
        default: dev
        type: string
      task_definition:
        required: true
        type: string
      container_name:
        required: true
        type: string
      aws_region:
        required: false
        type: string
        default: us-east-1
      service:
        required: true
        type: string
      cluster:
        required: true
        type: string
      ecr_repo:
        required: true
        type: string
      aws_log_group:
        required: true
        type: string
      task_role_arn:
        required: true
        type: string
      task_execution_role_arn:
        required: true
        type: string
    secrets:
      aws_access_key_id:
        required: true
      aws_secret_access_key:
        required: true
jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout 🛎️
        # Checkout the code repository
        uses: actions/checkout@v2.4.0

      - name: Configure AWS credentials
        id: configure-aws-credentials
        # Configure the AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.aws_access_key_id }}
          aws-secret-access-key: ${{ secrets.aws_secret_access_key }}
          aws-region: ${{ inputs.aws_region }}

      - name: Login to Amazon ECR
        # Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Get image
        # Get the Docker image from ECR
        id: get-img
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ inputs.ecr_repo }}
          IMAGE_TAG: ${{ github.sha }}
          # Get the image with the 'latest' tag
        run: |
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:latest" >> $GITHUB_OUTPUT
          echo "${{needs.publish.outputs.image_name}}"

      - name: Replace task definition values
        # Replace the values
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
          task-definition: ${{ inputs.task_definition }}
          container-name: ${{ inputs.container_name }}
          # Retreive from step above(get-img)
          image: ${{ steps.get-img.outputs.image }}

      - name: Deploy Amazon ECS task definition
        # Deploy to ECS
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ inputs.task_definition }}
          service: ${{ inputs.service }}
          cluster: ${{ inputs.cluster }}
          wait-for-service-stability: true
